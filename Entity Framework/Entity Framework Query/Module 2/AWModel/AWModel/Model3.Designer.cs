//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ConferencesModel", "FK_ConferenceTrackSession", "ConferenceTracks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AWModel.ConferenceTrack), "Sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AWModel.Session), true)]
[assembly: EdmRelationshipAttribute("ConferencesModel", "FK_Workshop_inherits_Session", "Sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AWModel.Session), "Workshops", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AWModel.Workshop), true)]
[assembly: EdmRelationshipAttribute("ConferencesModel", "SpeakerSessions", "Sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AWModel.Session), "Speakers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AWModel.Speaker))]

#endregion

namespace AWModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConferencesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ConferencesEntities object using the connection string found in the 'ConferencesEntities' section of the application configuration file.
        /// </summary>
        public ConferencesEntities() : base("name=ConferencesEntities", "ConferencesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConferencesEntities object.
        /// </summary>
        public ConferencesEntities(string connectionString) : base(connectionString, "ConferencesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConferencesEntities object.
        /// </summary>
        public ConferencesEntities(EntityConnection connection) : base(connection, "ConferencesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConferenceTrack> ConferenceTracks
        {
            get
            {
                if ((_ConferenceTracks == null))
                {
                    _ConferenceTracks = base.CreateObjectSet<ConferenceTrack>("ConferenceTracks");
                }
                return _ConferenceTracks;
            }
        }
        private ObjectSet<ConferenceTrack> _ConferenceTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeprecatedConferenceTrack> DeprecatedConferenceTracks
        {
            get
            {
                if ((_DeprecatedConferenceTracks == null))
                {
                    _DeprecatedConferenceTracks = base.CreateObjectSet<DeprecatedConferenceTrack>("DeprecatedConferenceTracks");
                }
                return _DeprecatedConferenceTracks;
            }
        }
        private ObjectSet<DeprecatedConferenceTrack> _DeprecatedConferenceTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Speaker> Speakers
        {
            get
            {
                if ((_Speakers == null))
                {
                    _Speakers = base.CreateObjectSet<Speaker>("Speakers");
                }
                return _Speakers;
            }
        }
        private ObjectSet<Speaker> _Speakers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Workshop> Workshops
        {
            get
            {
                if ((_Workshops == null))
                {
                    _Workshops = base.CreateObjectSet<Workshop>("Workshops");
                }
                return _Workshops;
            }
        }
        private ObjectSet<Workshop> _Workshops;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConferenceTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConferenceTracks(ConferenceTrack conferenceTrack)
        {
            base.AddObject("ConferenceTracks", conferenceTrack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeprecatedConferenceTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeprecatedConferenceTracks(DeprecatedConferenceTrack deprecatedConferenceTrack)
        {
            base.AddObject("DeprecatedConferenceTracks", deprecatedConferenceTrack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Speakers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpeakers(Speaker speaker)
        {
            base.AddObject("Speakers", speaker);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Workshops EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkshops(Workshop workshop)
        {
            base.AddObject("Workshops", workshop);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferencesModel", Name="ConferenceTrack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConferenceTrack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConferenceTrack object.
        /// </summary>
        /// <param name="trackId">Initial value of the TrackId property.</param>
        /// <param name="trackName">Initial value of the TrackName property.</param>
        /// <param name="trackChair">Initial value of the TrackChair property.</param>
        /// <param name="minSessions">Initial value of the MinSessions property.</param>
        /// <param name="maxSessions">Initial value of the MaxSessions property.</param>
        public static ConferenceTrack CreateConferenceTrack(global::System.Int32 trackId, global::System.String trackName, global::System.String trackChair, global::System.Int32 minSessions, global::System.Int32 maxSessions)
        {
            ConferenceTrack conferenceTrack = new ConferenceTrack();
            conferenceTrack.TrackId = trackId;
            conferenceTrack.TrackName = trackName;
            conferenceTrack.TrackChair = trackChair;
            conferenceTrack.MinSessions = minSessions;
            conferenceTrack.MaxSessions = maxSessions;
            return conferenceTrack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackId
        {
            get
            {
                return _TrackId;
            }
            set
            {
                if (_TrackId != value)
                {
                    OnTrackIdChanging(value);
                    ReportPropertyChanging("TrackId");
                    _TrackId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackId");
                    OnTrackIdChanged();
                }
            }
        }
        private global::System.Int32 _TrackId;
        partial void OnTrackIdChanging(global::System.Int32 value);
        partial void OnTrackIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackName
        {
            get
            {
                return _TrackName;
            }
            set
            {
                OnTrackNameChanging(value);
                ReportPropertyChanging("TrackName");
                _TrackName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackName");
                OnTrackNameChanged();
            }
        }
        private global::System.String _TrackName;
        partial void OnTrackNameChanging(global::System.String value);
        partial void OnTrackNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrackChair
        {
            get
            {
                return _TrackChair;
            }
            set
            {
                OnTrackChairChanging(value);
                ReportPropertyChanging("TrackChair");
                _TrackChair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrackChair");
                OnTrackChairChanged();
            }
        }
        private global::System.String _TrackChair;
        partial void OnTrackChairChanging(global::System.String value);
        partial void OnTrackChairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinSessions
        {
            get
            {
                return _MinSessions;
            }
            set
            {
                OnMinSessionsChanging(value);
                ReportPropertyChanging("MinSessions");
                _MinSessions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinSessions");
                OnMinSessionsChanged();
            }
        }
        private global::System.Int32 _MinSessions;
        partial void OnMinSessionsChanging(global::System.Int32 value);
        partial void OnMinSessionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxSessions
        {
            get
            {
                return _MaxSessions;
            }
            set
            {
                OnMaxSessionsChanging(value);
                ReportPropertyChanging("MaxSessions");
                _MaxSessions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxSessions");
                OnMaxSessionsChanged();
            }
        }
        private global::System.Int32 _MaxSessions;
        partial void OnMaxSessionsChanging(global::System.Int32 value);
        partial void OnMaxSessionsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferencesModel", "FK_ConferenceTrackSession", "Sessions")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("ConferencesModel.FK_ConferenceTrackSession", "Sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("ConferencesModel.FK_ConferenceTrackSession", "Sessions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferencesModel", Name="DeprecatedConferenceTrack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeprecatedConferenceTrack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeprecatedConferenceTrack object.
        /// </summary>
        /// <param name="trackId">Initial value of the TrackId property.</param>
        public static DeprecatedConferenceTrack CreateDeprecatedConferenceTrack(global::System.Int32 trackId)
        {
            DeprecatedConferenceTrack deprecatedConferenceTrack = new DeprecatedConferenceTrack();
            deprecatedConferenceTrack.TrackId = trackId;
            return deprecatedConferenceTrack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackId
        {
            get
            {
                return _TrackId;
            }
            set
            {
                if (_TrackId != value)
                {
                    OnTrackIdChanging(value);
                    ReportPropertyChanging("TrackId");
                    _TrackId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackId");
                    OnTrackIdChanged();
                }
            }
        }
        private global::System.Int32 _TrackId;
        partial void OnTrackIdChanging(global::System.Int32 value);
        partial void OnTrackIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackName
        {
            get
            {
                return _TrackName;
            }
            set
            {
                OnTrackNameChanging(value);
                ReportPropertyChanging("TrackName");
                _TrackName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackName");
                OnTrackNameChanged();
            }
        }
        private global::System.String _TrackName;
        partial void OnTrackNameChanging(global::System.String value);
        partial void OnTrackNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackChair
        {
            get
            {
                return _TrackChair;
            }
            set
            {
                OnTrackChairChanging(value);
                ReportPropertyChanging("TrackChair");
                _TrackChair = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackChair");
                OnTrackChairChanged();
            }
        }
        private global::System.String _TrackChair;
        partial void OnTrackChairChanging(global::System.String value);
        partial void OnTrackChairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinSessions
        {
            get
            {
                return _MinSessions;
            }
            set
            {
                OnMinSessionsChanging(value);
                ReportPropertyChanging("MinSessions");
                _MinSessions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinSessions");
                OnMinSessionsChanged();
            }
        }
        private Nullable<global::System.Int32> _MinSessions;
        partial void OnMinSessionsChanging(Nullable<global::System.Int32> value);
        partial void OnMinSessionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxSessions
        {
            get
            {
                return _MaxSessions;
            }
            set
            {
                OnMaxSessionsChanging(value);
                ReportPropertyChanging("MaxSessions");
                _MaxSessions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxSessions");
                OnMaxSessionsChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxSessions;
        partial void OnMaxSessionsChanging(Nullable<global::System.Int32> value);
        partial void OnMaxSessionsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferencesModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="conferenceTrackTrackId">Initial value of the ConferenceTrackTrackId property.</param>
        public static Session CreateSession(global::System.Int32 sessionId, global::System.String title, global::System.Int32 conferenceTrackTrackId)
        {
            Session session = new Session();
            session.SessionId = sessionId;
            session.Title = title;
            session.ConferenceTrackTrackId = conferenceTrackTrackId;
            return session;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private global::System.String _Length;
        partial void OnLengthChanging(global::System.String value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abstract
        {
            get
            {
                return _Abstract;
            }
            set
            {
                OnAbstractChanging(value);
                ReportPropertyChanging("Abstract");
                _Abstract = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abstract");
                OnAbstractChanged();
            }
        }
        private global::System.String _Abstract;
        partial void OnAbstractChanging(global::System.String value);
        partial void OnAbstractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConferenceTrackTrackId
        {
            get
            {
                return _ConferenceTrackTrackId;
            }
            set
            {
                OnConferenceTrackTrackIdChanging(value);
                ReportPropertyChanging("ConferenceTrackTrackId");
                _ConferenceTrackTrackId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConferenceTrackTrackId");
                OnConferenceTrackTrackIdChanged();
            }
        }
        private global::System.Int32 _ConferenceTrackTrackId;
        partial void OnConferenceTrackTrackIdChanging(global::System.Int32 value);
        partial void OnConferenceTrackTrackIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferencesModel", "FK_ConferenceTrackSession", "ConferenceTracks")]
        public ConferenceTrack ConferenceTrack
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConferenceTrack>("ConferencesModel.FK_ConferenceTrackSession", "ConferenceTracks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConferenceTrack>("ConferencesModel.FK_ConferenceTrackSession", "ConferenceTracks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConferenceTrack> ConferenceTrackReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConferenceTrack>("ConferencesModel.FK_ConferenceTrackSession", "ConferenceTracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConferenceTrack>("ConferencesModel.FK_ConferenceTrackSession", "ConferenceTracks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferencesModel", "FK_Workshop_inherits_Session", "Workshops")]
        public Workshop Workshop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workshop>("ConferencesModel.FK_Workshop_inherits_Session", "Workshops").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workshop>("ConferencesModel.FK_Workshop_inherits_Session", "Workshops").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workshop> WorkshopReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workshop>("ConferencesModel.FK_Workshop_inherits_Session", "Workshops");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workshop>("ConferencesModel.FK_Workshop_inherits_Session", "Workshops", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferencesModel", "SpeakerSessions", "Speakers")]
        public EntityCollection<Speaker> Speakers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Speaker>("ConferencesModel.SpeakerSessions", "Speakers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Speaker>("ConferencesModel.SpeakerSessions", "Speakers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferencesModel", Name="Speaker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speaker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Speaker object.
        /// </summary>
        /// <param name="speakerId">Initial value of the SpeakerId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static Speaker CreateSpeaker(global::System.Int32 speakerId, global::System.String firstName, global::System.String lastName, global::System.Boolean inactive)
        {
            Speaker speaker = new Speaker();
            speaker.SpeakerId = speakerId;
            speaker.FirstName = firstName;
            speaker.LastName = lastName;
            speaker.Inactive = inactive;
            return speaker;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeakerId
        {
            get
            {
                return _SpeakerId;
            }
            set
            {
                if (_SpeakerId != value)
                {
                    OnSpeakerIdChanging(value);
                    ReportPropertyChanging("SpeakerId");
                    _SpeakerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeakerId");
                    OnSpeakerIdChanged();
                }
            }
        }
        private global::System.Int32 _SpeakerId;
        partial void OnSpeakerIdChanging(global::System.Int32 value);
        partial void OnSpeakerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Expertise
        {
            get
            {
                return _Expertise;
            }
            set
            {
                OnExpertiseChanging(value);
                ReportPropertyChanging("Expertise");
                _Expertise = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Expertise");
                OnExpertiseChanged();
            }
        }
        private global::System.String _Expertise;
        partial void OnExpertiseChanging(global::System.String value);
        partial void OnExpertiseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bio
        {
            get
            {
                return _Bio;
            }
            set
            {
                OnBioChanging(value);
                ReportPropertyChanging("Bio");
                _Bio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bio");
                OnBioChanged();
            }
        }
        private global::System.String _Bio;
        partial void OnBioChanging(global::System.String value);
        partial void OnBioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferencesModel", "SpeakerSessions", "Sessions")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("ConferencesModel.SpeakerSessions", "Sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("ConferencesModel.SpeakerSessions", "Sessions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferencesModel", Name="Workshop")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workshop : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Workshop object.
        /// </summary>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        public static Workshop CreateWorkshop(global::System.Int32 sessionId)
        {
            Workshop workshop = new Workshop();
            workshop.SessionId = sessionId;
            return workshop;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreRequisite
        {
            get
            {
                return _PreRequisite;
            }
            set
            {
                OnPreRequisiteChanging(value);
                ReportPropertyChanging("PreRequisite");
                _PreRequisite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreRequisite");
                OnPreRequisiteChanged();
            }
        }
        private global::System.String _PreRequisite;
        partial void OnPreRequisiteChanging(global::System.String value);
        partial void OnPreRequisiteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferencesModel", "FK_Workshop_inherits_Session", "Sessions")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("ConferencesModel.FK_Workshop_inherits_Session", "Sessions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("ConferencesModel.FK_Workshop_inherits_Session", "Sessions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("ConferencesModel.FK_Workshop_inherits_Session", "Sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("ConferencesModel.FK_Workshop_inherits_Session", "Sessions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
